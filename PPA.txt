def residuo(variable):
    print("""
        El resultado es:    
    """)
    print int(variable[1])%int(variable[2])
    raw_input("presiona Enter para continuar")


def BtH(orden, numero):
    largo=len(numero)/4
    sobra=len(numero)%4
    x=0
    resultado=""
    aux=0
    while x<largo:
        y=0
       
        if numero[x*4+0]=="0" and numero[x*4+1]=="0" and numero[x*4+2]=="0" and numero[x*4+3]=="0":
            resultado="0"+resultado
        if numero[x*4+0]=="0" and numero[x*4+1]=="0" and numero[x*4+2]=="0" and numero[x*4+3]=="1":
            resultado="1"+resultado
        if numero[x*4+0]=="0" and numero[x*4+1]=="0" and numero[x*4+2]=="1" and numero[x*4+3]=="0":
            resultado="2"+resultado
        if numero[x*4+0]=="0" and numero[x*4+1]=="0" and numero[x*4+2]=="1" and numero[x*4+3]=="1":
            resultado="3"+resultado
        if numero[x*4+0]=="0" and numero[x*4+1]=="1" and numero[x*4+2]=="0" and numero[x*4+3]=="0":
            resultado="4"+resultado
        if numero[x*4+0]=="0" and numero[x*4+1]=="1" and numero[x*4+2]=="0" and numero[x*4+3]=="1":
            resultado="5"+resultado
        if numero[x*4+0]=="0" and numero[x*4+1]=="1" and numero[x*4+2]=="1" and numero[x*4+3]=="0":
            resultado="6"+resultado
        if numero[x*4+0]=="0" and numero[x*4+1]=="1" and numero[x*4+2]=="1" and numero[x*4+3]=="1":
            resultado="7"+resultado
        if numero[x*4+0]=="1" and numero[x*4+1]=="0" and numero[x*4+2]=="0" and numero[x*4+3]=="0":
            resultado="8"+resultado
        if numero[x*4+0]=="1" and numero[x*4+1]=="0" and numero[x*4+2]=="0" and numero[x*4+3]=="1":
            resultado="9"+resultado
        if numero[x*4+0]=="1" and numero[x*4+1]=="0" and numero[x*4+2]=="1" and numero[x*4+3]=="0":
            resultado="A"+resultado
        if numero[x*4+0]=="1" and numero[x*4+1]=="0" and numero[x*4+2]=="1" and numero[x*4+3]=="1":
            resultado="B"+resultado
        if numero[x*4+0]=="1" and numero[x*4+1]=="1" and numero[x*4+2]=="0" and numero[x*4+3]=="0":
            resultado="C"+resultado
        if numero[x*4+0]=="1" and numero[x*4+1]=="1" and numero[x*4+2]=="0" and numero[x*4+3]=="1":
            resultado="D"+resultado
        if numero[x*4+0]=="1" and numero[x*4+1]=="1" and numero[x*4+2]=="1" and numero[x*4+3]=="0":
            resultado="E"+resultado
        if numero[x*4+0]=="1" and numero[x*4+1]=="1" and numero[x*4+2]=="1" and numero[x*4+3]=="1":
            resultado="F"+resultado
            
        x=x+1

    pene=""
    x=0
    while x<sobra:
        if numero[(largo-1)+x]=="1":
            pene="1"+pene
        else:
            pene="0"+pene
        x=x+1

    if pene=="000":
        resultado="0"+resultado
    if pene=="001":
        resultado="1"+resultado
    if pene=="010":
        resultado="2"+resultado
    if pene=="011":
        resultado="3"+resultado
    if pene=="100":
        resultado="4"+resultado
    if pene=="101":
        resultado="5"+resultado
    if pene=="110":
        resultado="6"+resultado
    if pene=="111":
        resultado="7"+resultado
    if pene=="00":
        resultado="0"+resultado
    if pene=="01":
        resultado="1"+resultado
    if pene=="10":
        resultado="2"+resultado
    if pene=="11":
        resultado="3"+resultado
    if pene=="0":
        resultado="0"+resultado
    if pene=="1":
        resultado="1"+resultado
    
    print resultado

salir=False






while not salir:

    print("""
        SUM Funcion de suma
        MUL Funcion de multiplicar
        DIV Funcion de dividir
        RES Funcion de residuo
        EXP Funcion de exponente
        RZ  Funcion de raiz
        BD  Funcion binario-decimal
        BH  Funcion binario-hexadecimal
        HD  Funcion hexadecimal-decimal
        PRI Funcion rango de numeros primos
        NP  Funcion numero primo
        HP  Ayuda sobre funciones
        S   Salir de aplicacion

    """)
    ejecutar=raw_input("""Bienvenido
    """)

    if ejecutar=="S" or ejecutar=="s":
        salir=True
    
    funcion=ejecutar.split(" ")

    if funcion[0]=="RES":
        residuo(funcion)

    if funcion[0]=="BH":
        BtH(funcion[1], funcion[2])

    if funcion[0]=="NP":
        NP(0)

    if funcion[0]=="BD":
        BD(0)

    if funcion[0]=="SUM":
        SUM(0)

    if funcion[0]=="MUL":
        MUL(0)



#####     AQUI ACABA LO CHIDO :v



##################shiro

    raw_input("presiona Enter para continuar")        

def NP(X):
    X=int(raw_input("Teclea el numero limite:"))
    Contador=2
    EsPrimo=True
    Contador2=2
    while(Contador2<X):
        EsPrimo=True
        Contador=2
        while(Contador<Contador2):
            if(Contador2 % Contador == 0):
                EsPrimo=False 
            Contador=Contador+1
        if(EsPrimo):
            print str(Contador2)+ " Es Primo"
        Contador2=Contador2+1

def DIV(Divisor):
	Divisor = int(raw_input("Escribe cuanto vale el divisor "))
	Dividente = int(raw_input("Escribe cuanto vale el dividente "))
	Resultado = Divisor/Dividente
	print ("El resultado es " + str(Resultado))

################# luis

#Suma
#Luis Enrique Romero Leyva
def SUM(numeros):
    numeros=int(raw_input("Cantidad de numeros a sumar: "))
    suma=0
    while numeros>0:
        numero=int(raw_input("Numero a sumar: "))
        suma=suma+numero
        numeros=numeros-1
    print (suma)

#Decimal a Binario
#Luis Enrique Romero Leyva
def BD(numero):
    numero = int(raw_input("Introduzca el número a convertir: "))
    base = 2

    def cambio_base(decimal, base):
        conversion = ''
        while decimal // base != 0:
            conversion = str(decimal % base) + conversion
            decimal = decimal // base
        return str(decimal) + conversion

    print ("El número "+str(numero)+" es igual a "+str(cambio_base(numero, base))+" en sistema binario")


##########david


def MUL(nmul):
    print ("Multiplicacion: \n")
    nmul=float(raw_input("Cuantos valores desea multiplicar?"))
    r=1
    if nmul == 1 :
        print ("Se necesitan al menos dos valores")
        nmul=0
    while(nmul != 0):
        x=float(raw_input(""))
        r=float(r)*x
        nmul=float(nmul)-1
    print ("El resultado es: ")+str(r)

def RZ(inp):
    print ("Raices: \n")
    inp=raw_input("Inserte numero y exponente: ").split()
    n=int(inp[0])
    if(len(inp) == 1):
        exp=2
    else:
        exp=int(inp[1])
    if(n >= 0):
        r=""
        if(exp >= 0):
            r=n**(1.0/exp)
            print ("El resultado es: ")+str(r)
        else:
            print("Favor de introducir un exponente positivo")
    elif(n < 0): 
        if(exp % 2 == 0 ):
            print("El resultado es un numero imaginario")
        else:
            r=""
            if(exp >= 0):
                print("Favor de introducir un numero positivo")
            else:
                print("Favor de introducir un exponente positivo")
            
            print ("El resultado es: ")+str(r)


salir=False;

while not salir:

    print("""
        SUM Funcion de suma
        MUL Funcion de multiplicar
        DIV Funcion de dividir
        RES Funcion de residuo
        EXP Funcion de exponente
        RZ  Funcion de raiz
        BD  Funcion binario-decimal
        BH  Funcion binario-hexadecimal
        HD  Funcion hexadecimal-decimal
        PRI Funcion rango de numeros primos
        NP  Funcion numero primo
        HP  Ayuda sobre funciones
        S   Salir de aplicacion

    """)
    ejecutar=raw_input("""Bienvenido
    """)

    if ejecutar=="S" or ejecutar=="s":
        salir=True
    
    funcion=ejecutar.split(" ")

    if funcion[0]=="RES":
        residuo(funcion)

    if funcion[0]=="BH":
        BtH(funcion[1], funcion[2])

    if funcion[0]=="NP":
        NP(0)

    if funcion[0]=="BD":
        BD(0)

    if funcion[0]=="SUM":
        SUM(0)

    if funcion[0]=="MUL":
        MUL(0)

    if funcion[0]=="RZ":
        RZ(0)

    if funcion[0]=="DIV":
        DIV(0)


